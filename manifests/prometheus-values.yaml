kubelet:
  enabled: true
  serviceMonitor:
    enabled: true
    https: true
    insecureSkipVerify: true
    interval: 30s

prometheus:
  prometheusSpec:
    serviceMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelector: {}
    podMonitorSelector: {}
    ruleSelector: {}
    scrapeInterval: 30s

    alertingEndpoints:
      - name: alertmanager
        namespace: monitoring
        port: web

    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 1Gi

  service:
    nameOverride: "prometheus"
    type: ClusterIP
    port: 9090
  ingress:
    enabled: false

alertmanager:
  enabled: true
  config:
    global:
      smtp_smarthost: "email-smtp.us-east-1.amazonaws.com:587"
      smtp_from: "${SMTP_FROM}"
      smtp_auth_username: "${SMTP_USER}"
      smtp_auth_password: "${SMTP_PASS}"
    route:
      receiver: email
    receivers:
      - name: email
        email_configs:
          - to: "${SMTP_TO}"

  extraSecretMounts:
    - name: alertmanager-smtp-secret
      mountPath: /etc/alertmanager/secrets
      secretName: alertmanager-smtp-secret
      readOnly: true

  extraEnvVarsSecret: alertmanager-smtp-secret

  persistence:
    enabled: true
    storageClass: "local-path"
    accessModes:
      - ReadWriteOnce
    size: 2Gi
  service:
    nameOverride: "alertmanager"

## Node Exporter configuration
nodeExporter:
  enabled: true

  # Service configuration
  service:
    type: ClusterIP
    ports:
      http: 9100

  # Resources
  resources:
    limits:
      cpu: 200m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 30Mi

  # Host network and PID namespace
  hostNetwork: true
  hostPID: true

## Kube State Metrics configuration
kubeStateMetrics:
  enabled: true

  # Service configuration
  service:
    type: ClusterIP
    ports:
      http: 8080

  # Resources
  resources:
    limits:
      cpu: 100m
      memory: 190Mi
    requests:
      cpu: 10m
      memory: 32Mi

## Operator configuration
operator:
  enabled: true

  # Service configuration
  service:
    type: ClusterIP
    ports:
      http: 8080

  # Resources
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 100m
      memory: 100Mi

## ServiceMonitor configurations
serviceMonitor:
  enabled: true
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-prometheus

## RBAC
rbac:
  create: true
  pspEnabled: false

## Service Account
serviceAccount:
  create: true
  automountServiceAccountToken: true

## Security Context
podSecurityContext:
  fsGroup: 1001
  runAsUser: 1001
  runAsNonRoot: true

## Additional scrape configs for custom metrics
additionalScrapeConfigs:
  enabled: false
  configs: []
