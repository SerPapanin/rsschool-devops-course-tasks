name: "Terraform GitHub action"
on:
  push:
    branches:
      #- master
      - task_1
  pull_request:
    branches:
      - master
permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR
env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_BUCKET_NAME: ${{ vars.AWS_BUCKET_NAME }}
  AWS_TF_STATE_FILE_NAME: ${{ vars.AWS_TF_STATE_FILE_NAME }}
  TF_VERSION: ${{ vars.TF_VERSION }}
  TERRAFORM_DIR: ${{ vars.TERRAFORM_DIR }}

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TERRAFORM_DIR }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

  terraform-plan:
    needs: terraform-check
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TERRAFORM_DIR }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        id: init
        run: terraform init
          -backend-config="bucket=${{ env.AWS_BUCKET_NAME }}"
          -backend-config="key=${{ env.AWS_TF_STATE_FILE_NAME }}"
          -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        if: github.event_name == 'pull_request'
        continue-on-error: true

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TERRAFORM_DIR }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        id: init
        run: terraform init
          -backend-config="bucket=${{ env.AWS_BUCKET_NAME }}"
          -backend-config="key=${{ env.AWS_TF_STATE_FILE_NAME }}"
          -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve
